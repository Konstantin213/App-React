{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","profileAvatarDefault","aboutMe","contacts","facebook","jobsAvatar","lookingForAJob","lookingForAJobDescription","Preloader","Post","item","message","Like","maxLength10","maxLengthCreator","MyPost","React","memo","posts","map","p","likeCount","createRef","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.00adb561.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2YxfM\",\"jobsAvatar\":\"ProfileInfo_jobsAvatar__287rx\",\"img\":\"ProfileInfo_img__3Puxm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2wdI2\",\"posts\":\"MyPosts_posts__1tJRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2gpb4\"};","import s from \"./ProfileInfo.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"Статуса нет\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange} value={status}/>\r\n\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHook;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport profileAvatarDefault from \"./../../../assets/img/user.jpg\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || profileAvatarDefault}/>\r\n                <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div>aboutMe : {props.profile.aboutMe}\r\n            </div>\r\n            <div>facebook : {props.profile.contacts.facebook}\r\n            </div>\r\n            <div className={s.jobsAvatar}>lookingForAJob : {props.profile.lookingForAJob ? <img\r\n                    src='https://cdn.searchenginejournal.com/wp-content/uploads/2017/06/shutterstock_268688447-760x400.jpg'/>\r\n                : <img\r\n                    src='https://steamuserimages-a.akamaihd.net/ugc/45369364728288691/B2919D4F23079C75AC10D1ECA585490A0A7FA962/'/>}\r\n            </div>\r\n            <div>Looking For A Job Description : {props.profile.lookingForAJobDescription}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://lokeshdhakar.com/projects/lightbox2/images/image-3.jpg\" />\r\n      Message - {props.message}\r\n      <div>Like {props.Like} </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControlls/FormsControlls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n    let posts = props.posts.map(p => <Post message={p.message} Like={p.likeCount}/>);\r\n    let newPostElements = React.createRef();\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>{posts}</div>\r\n        </div>\r\n    );\r\n\r\n})\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name='newPostText'\r\n                       placeholder='Enter your message'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({form: 'addPost'})(MyPostForm)\r\n\r\nexport default MyPost;\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {props.profile}\r\n                         status = {props.status}\r\n                         updateStatus = {props.updateStatus}/>\r\n            <MyPostContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}